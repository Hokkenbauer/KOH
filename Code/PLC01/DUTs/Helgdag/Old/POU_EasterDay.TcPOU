<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="POU_EasterDay" Id="{9ad5efdb-fba1-46e7-9b5e-9699d38e6157}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM POU_EasterDay
VAR
	fbSystemTime 				: FB_SystemTime;
	
    iYear 						: INT; (* Ange året här *)
    iMonth						: INT;
	iDay						: INT;
    iEastermDayOfYear			: INT;     (* Påskdagens dagnummer i året *)
    isLeapYear 					: BOOL;   (* Flagga för skottår *)	
	stSystemTime				: TIMESTRUCT;
    arrMonthDays 				: ARRAY[1..12] OF INT := [31,28,31,30,31,30,31,31,30,31,30,31]; (* Dagar per månad *)
    iDayOfYear					: INT;
	dActDate					: DATE_AND_TIME; 
    (* Variabler för Gauss algoritm *)
    a, b, c, d, e, f, g, h, i, k, L, m, n : INT;
	iDayOfWeek					: INT;
	
	iVarHalloweenDay			: INT;
	iVarMidsommardagen 			: INT;
	iVarMidsommardagen1			: INT;
	iVarMidsommardagenDayOfWeek	: INT;
	iVarDayOfYearCristmas		: INT;
	iVarDayForstamaj			: INT;
	iVarNationaldag				: INT;
	iVarJuldagen				: INT;
	
	iLangfredag					: INT;
 	iSkartorsdag				: INT;
	iPaskDagen					: INT;
 	iPaskafton					: INT;
 	iAnnanDagPask				: INT;
	iKristihimmel				: INT;
	iPingstAfton				: INT;
	iPingstDagen				: INT;
	iMidsommarDagen				: INT;
	iMidsommarAfton				: INT;
	iHalloween					: INT;
	iJulafton					: INT;
	iJuldagen					: INT;
	iAnnandagjul				: INT;
	iTrettondag					: INT;
    iNyarsafton					: INT;	
    iNyarsdagen					: INT;	
    iForstamaj					: INT;		
    iNationaldag				: INT;
	
	bLangfredag					: BOOL;
	bSkartorsdag				: BOOL;
	bPaskDagen					: BOOL;
    bPaskafton					: BOOL;
    bAnnanDagPask				: BOOL;
    bKristihimmel				: BOOL;
    bPingstAfton				: BOOL;
    bPingstDagen				: BOOL;
    bMidsommarDagen				: BOOL;
    bMidsommarAfton				: BOOL;
    bHalloween					: BOOL;
    bJulafton					: BOOL;
    bJuldagen					: BOOL;
    bAnnandagjul				: BOOL;
    bTrettondag					: BOOL;
    bNyarsafton					: BOOL;
    bNyarsdagen					: BOOL;
    bForstamaj					: BOOL;
    bNationaldag				: BOOL;

	
END_VAR	]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbSystemTime();
iDayOfYear:=fc_Day_Of_Year(IDATE:=TO_DATE (fbSystemTime.dtSystemTime));
iYear:= DWORD_TO_INT(fbSystemTime.nYear);
iDayOfWeek:= DWORD_TO_INT(fbSystemTime.nDay);


// Gauss algoritm för att räkna ut påskdagen
a := iYear MOD 19;
b := iYear / 100;
c := iYear MOD 100;
d := b / 4;
e := b MOD 4;
f := (b + 8) / 25;
g := (b - f + 1) / 3;
h := (19 * a + b - d - g + 15) MOD 30;
i := c / 4;
k := c MOD 4;
L := (32 + 2 * e + 2 * i - h - k) MOD 7;
m := (a + 11 * h + 22 * L) / 451;
n := (h + L - 7 * m + 114);
iMonth := n / 31;
iEastermDayOfYear := (n MOD 31) + 1;

// Kontrollera om året är skottår
IF (iYear MOD 4 = 0 AND iYear MOD 100 <> 0) OR (iYear MOD 400 = 0) THEN
    isLeapYear := TRUE;
    arrMonthDays[2] := 29; // Februari har 29 dagar i skottår
ELSE
    isLeapYear := FALSE;
END_IF

// Beräkna årets dag för påskdagen
iEastermDayOfYear := iDay; // Startvärde
FOR i := 1 TO iMonth - 1 DO
    iEastermDayOfYear := iEastermDayOfYear + arrMonthDays[i]; // Addera dagar i tidigare månader
END_FOR

// Beräkna årets dag för 31 oktober, Halloween
iVarHalloweenDay := 31; // Startvärde för Halloweens dag i oktober
FOR i := 1 TO 9 DO // Loopar igenom månaderna januari-september
    iVarHalloweenDay := iVarHalloweenDay + arrMonthDays[i]; // Addera dagar i tidigare månader
END_FOR

IF isLeapYear THEN
    iVarHalloweenDay := iVarHalloweenDay + 1;
END_IF

// Beräkna veckodag för 20 juni, midsommardagen
// Formel för veckodag (Zeller's Congruence)
iVarMidsommardagenDayOfWeek := (20 + ((13 * 6 + 1) / 5) + (iYear MOD 100) + ((iYear MOD 100) / 4) + ((iYear / 100) / 4) - (2 * (iYear / 100))) MOD 7;
IF iVarMidsommardagenDayOfWeek < 0 THEN
    iVarMidsommardagenDayOfWeek := iVarMidsommardagenDayOfWeek + 7; // Hantera negativa veckodagar
END_IF

// Hitta första lördagen efter 20 juni
iVarMidsommardagen := 20 + ((6 - iVarMidsommardagenDayOfWeek) MOD 7) + 1;

// Beräkna årets dag för midsommardagen
iVarMidsommardagen1 := iVarMidsommardagen;
FOR i := 1 TO 5 DO // Loopar igenom månaderna januari-maj
    iVarMidsommardagen1 := iVarMidsommardagen1 + arrMonthDays[i]; //Addera dagar i tidigare månader
END_FOR

// Beräknar årets dag för 25 december
iVarDayOfYearCristmas := 24; // Startvärde för juldagen
FOR i := 1 TO 11 DO // Loopar igenom månaderna januari-november
    iVarDayOfYearCristmas := iVarDayOfYearCristmas + arrMonthDays[i]; // Addera dagar i tidigare månader
END_FOR

IF isLeapYear THEN
    iVarDayOfYearCristmas := iVarDayOfYearCristmas + 1;
END_IF

// Beräknar årets dag för 1 maj
iVarDayForstamaj := 0; // Startvärde för 1 maj
FOR i := 1 TO 4 DO // Loopar igenom månaderna januari-april *)
    iVarDayForstamaj := iVarDayForstamaj + arrMonthDays[i]; //Addera dagar i tidigare månader
END_FOR

IF isLeapYear THEN
    iVarDayForstamaj := iVarDayForstamaj + 1;
END_IF

// Beräkna sveriges nationaldag
iVarNationaldag := 5; // Startvärde för 6 juni
FOR i := 1 TO 5 DO // Loopar igenom månaderna januari-maj
    iVarNationaldag := iVarNationaldag + arrMonthDays[i]; // Addera dagar i tidigare månader
END_FOR
IF isLeapYear THEN
    iVarNationaldag := iVarNationaldag + 1;
END_IF

// Ger var värde för resp. dag
iLangfredag 		:= iEastermDayOfYear - 2;
iSkartorsdag	 	:= iEastermDayOfYear - 3;
iPaskDagen			:= iEastermDayOfYear;
iPaskafton 			:= iEastermDayOfYear - 1; 
iAnnanDagPask 		:= iEastermDayOfYear + 1; 
iKristihimmel 		:= iEastermDayOfYear + 39; 
iPingstAfton		:= iEastermDayOfYear + 48; 
iPingstDagen		:= iEastermDayOfYear + 49;
iMidsommarDagen		:= iVarMidsommardagen1;
iMidsommarAfton		:= iVarMidsommardagen1 - 1;
iHalloween			:= iVarHalloweenDay;
iJulafton			:= iVarDayOfYearCristmas - 1;
iJuldagen			:= iVarDayOfYearCristmas;
iAnnandagjul		:= iVarDayOfYearCristmas + 1;
iTrettondag			:= 6;
iNyarsafton			:= iVarDayOfYearCristmas + 6;
iNyarsdagen			:= 1; 
iForstamaj			:= iVarDayForstamaj;
iNationaldag		:= iVarNationaldag;

// Sätter bool för resp. dag
bLangfredag 		:= (iDayOfYear = (iLangfredag));
bSkartorsdag	 	:= (iDayOfYear = (iSkartorsdag));
bPaskDagen			:= (iDayOfYear = (iPaskDagen));
bPaskafton 			:= (iDayOfYear = (iPaskafton));
bAnnanDagPask 		:= (iDayOfYear = (iAnnanDagPask));
bKristihimmel 		:= (iDayOfYear = (iKristihimmel));
bPingstAfton		:= (iDayOfYear = (iPingstAfton));
bPingstDagen		:= (iDayOfYear = (iPingstDagen));
bMidsommarDagen		:= (iDayOfYear = (iMidsommarDagen));
bMidsommarAfton		:= (iDayOfYear = (iMidsommarAfton));
bHalloween			:= (iDayOfYear = (iHalloween));
bJulafton			:= (iDayOfYear = (iJulafton));
bJuldagen			:= (iDayOfYear = (iJuldagen));
bAnnandagjul		:= (iDayOfYear = (iAnnandagjul));
bTrettondag			:= (iDayOfYear = (iTrettondag));
bNyarsafton			:= (iDayOfYear = (iNyarsafton));
bNyarsdagen			:= (iDayOfYear = (iNyarsdagen));
bForstamaj			:= (iDayOfYear = (iForstamaj));
bNationaldag		:= (iDayOfYear = (iNationaldag));




]]></ST>
    </Implementation>
    <LineIds Name="POU_EasterDay">
      <LineId Id="52" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="15" Count="29" />
      <LineId Id="128" Count="4" />
      <LineId Id="127" Count="0" />
      <LineId Id="288" Count="0" />
      <LineId Id="286" Count="1" />
      <LineId Id="285" Count="0" />
      <LineId Id="138" Count="6" />
      <LineId Id="257" Count="0" />
      <LineId Id="146" Count="6" />
      <LineId Id="137" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="162" Count="3" />
      <LineId Id="126" Count="0" />
      <LineId Id="290" Count="2" />
      <LineId Id="289" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="224" Count="4" />
      <LineId Id="294" Count="2" />
      <LineId Id="293" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="237" Count="4" />
      <LineId Id="297" Count="1" />
      <LineId Id="243" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="110" Count="0" />
      <LineId Id="60" Count="5" />
      <LineId Id="158" Count="0" />
      <LineId Id="66" Count="6" />
      <LineId Id="74" Count="1" />
      <LineId Id="122" Count="1" />
      <LineId Id="170" Count="17" />
      <LineId Id="124" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="262" Count="2" />
      <LineId Id="121" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>